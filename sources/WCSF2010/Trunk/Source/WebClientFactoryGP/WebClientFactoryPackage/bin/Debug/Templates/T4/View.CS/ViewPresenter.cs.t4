<#@ Template Language="C#" #>
<#@ Assembly name="System.dll" #>
<#@ Import Namespace="System" #>
<#@ property processor="PropertyProcessor" name="ModuleName" #>
<#@ property processor="PropertyProcessor" name="ViewName" #>
<#@ property processor="PropertyProcessor" name="ModuleNamespace" #>
<#@ property processor="PropertyProcessor" name="ViewsFolder" #>
using System;
using System.Collections.Generic;
using System.Text;
using Microsoft.Practices.ObjectBuilder;
using Microsoft.Practices.CompositeWeb;

namespace <#= this.ModuleNamespace #>.<#= this.ViewsFolder #>
{
	public class <#= this.ViewName #>Presenter : Presenter<I<#= this.ViewName #>View>
	{
		
		// NOTE: Uncomment the following code if you want ObjectBuilder to inject the module controller
		//       The code will not work in the Shell module, as a module controller is not created by default
		//
		// private I<#= this.ModuleName #>Controller _controller;
		// public <#= this.ViewName #>Presenter([CreateNew] I<#= this.ModuleName #>Controller controller)
		// {
		// 		_controller = controller;
		// }

		public override void OnViewLoaded()
		{
			// TODO: Implement code that will be executed every time the view loads
		}

		public override void OnViewInitialized()
		{
			// TODO: Implement code that will be executed the first time the view loads
		}

		// TODO: Handle other view events and set state in the view
	}
}



