<#@ Template Language="C#" #>
<#@ Assembly name="System.dll" #>
<#@ Import Namespace="System" #>
<#@ property processor="PropertyProcessor" name="ViewName" #>
<#@ property processor="PropertyProcessor" name="ModuleNamespace" #>
using System;
using Microsoft.Practices.ObjectBuilder;

namespace <#= this.ModuleNamespace #>.Views
{
	public partial class <#= this.ViewName #> : Microsoft.Practices.CompositeWeb.Web.UI.UserControl, I<#= this.ViewName #>View
	{
		private <#= this.ViewName #>Presenter _presenter;

		protected void Page_Load(object sender, EventArgs e)
		{
			if (!this.IsPostBack)
			{
				this._presenter.OnViewInitialized();
			}
			this._presenter.OnViewLoaded();
		}

		[CreateNew]
		public <#= this.ViewName #>Presenter Presenter
		{
			get
			{
				return this._presenter;
			}
			set
			{
				if(value == null)
					throw new ArgumentNullException("value");
					
				this._presenter = value;
				this._presenter.View = this;
			}
		}

		// TODO: Forward events to the presenter and show state to the user.
		// For examples of this, see the View-Presenter (with Application Controller) QuickStart:
		//	

	}
}
