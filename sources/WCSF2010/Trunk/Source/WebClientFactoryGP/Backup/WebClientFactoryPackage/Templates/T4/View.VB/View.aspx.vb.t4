<#@ Template Language="C#" #>
<#@ Assembly name="System.dll" #>
<#@ Import Namespace="System" #>
<#@ property processor="PropertyProcessor" name="ViewName" #>
<#@ property processor="PropertyProcessor" name="ModuleNamespace" #>

Imports System
Imports Microsoft.Practices.ObjectBuilder
Imports <#= this.ModuleNamespace #>.Views

Namespace <#= this.ModuleNamespace #>.Views
	Partial Public Class <#= this.ViewName #>
		Inherits Microsoft.Practices.CompositeWeb.Web.UI.Page
		Implements I<#= this.ViewName #>View

		Private _presenter As <#= this.ViewName #>Presenter

		Protected Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs) Handles MyBase.Load
			If (Not Me.IsPostBack) Then
				Me._presenter.OnViewInitialized()
			End If

			Me._presenter.OnViewLoaded()
		End Sub

		<CreateNew()> _
		Public Property Presenter() As <#= this.ViewName #>Presenter
			Get
				Return Me._presenter
			End Get
			Set(ByVal value As <#= this.ViewName #>Presenter)
		        If value Is Nothing Then
			        Throw New ArgumentNullException("value")
				End If
				Me._presenter = value
				Me._presenter.View = Me
			End Set
		End Property

		' TODO: Forward events to the presenter and show state to the user.
		' For examples of this, see the View-Presenter (with Application Controller) QuickStart:
		'	

	End Class

End Namespace
