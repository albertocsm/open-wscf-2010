//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30128.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30128.1.
// 
#pragma warning disable 1591

namespace GlobalBank.Commercial.EBanking.Modules.EFT.ServiceProxies.AccountService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="QuoteService", Namespace="http://GlobalBankServices.ServiceContracts/2006/11")]
    public partial class AccountService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetAccountsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProcessTransfersOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public AccountService() {
            this.Url = global::GlobalBank.Commercial.EBanking.Modules.EFT.ServiceProxies.Properties.Settings.Default.GlobalBank_Commercial_EBanking_Modules_EFT_ServiceProxies_AccountService_AccountService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetAccountsCompletedEventHandler GetAccountsCompleted;
        
        /// <remarks/>
        public event CreateAccountCompletedEventHandler CreateAccountCompleted;
        
        /// <remarks/>
        public event ProcessTransfersCompletedEventHandler ProcessTransfersCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://GlobalBankServices/2006/06/GetAccounts", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute(Namespace="http://GlobalBankServices.ServiceContracts/2006/11/IAccountService", IsNullable=true)]
        public GetAccountResponseType GetAccounts([System.Xml.Serialization.XmlElementAttribute(Namespace="http://GlobalBankServices.ServiceContracts/2006/11/IAccountService", IsNullable=true)] GetAccountRequestType getAccountsRequest) {
            object[] results = this.Invoke("GetAccounts", new object[] {
                        getAccountsRequest});
            return ((GetAccountResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountsAsync(GetAccountRequestType getAccountsRequest) {
            this.GetAccountsAsync(getAccountsRequest, null);
        }
        
        /// <remarks/>
        public void GetAccountsAsync(GetAccountRequestType getAccountsRequest, object userState) {
            if ((this.GetAccountsOperationCompleted == null)) {
                this.GetAccountsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountsOperationCompleted);
            }
            this.InvokeAsync("GetAccounts", new object[] {
                        getAccountsRequest}, this.GetAccountsOperationCompleted, userState);
        }
        
        private void OnGetAccountsOperationCompleted(object arg) {
            if ((this.GetAccountsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountsCompleted(this, new GetAccountsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://GlobalBankServices/2006/06/CreateAccount", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        public void CreateAccount([System.Xml.Serialization.XmlElementAttribute(Namespace="http://GlobalBankServices.ServiceContracts/2006/11/IAccountService", IsNullable=true)] CreateAccountRequestType createAccountRequest) {
            this.Invoke("CreateAccount", new object[] {
                        createAccountRequest});
        }
        
        /// <remarks/>
        public void CreateAccountAsync(CreateAccountRequestType createAccountRequest) {
            this.CreateAccountAsync(createAccountRequest, null);
        }
        
        /// <remarks/>
        public void CreateAccountAsync(CreateAccountRequestType createAccountRequest, object userState) {
            if ((this.CreateAccountOperationCompleted == null)) {
                this.CreateAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateAccountOperationCompleted);
            }
            this.InvokeAsync("CreateAccount", new object[] {
                        createAccountRequest}, this.CreateAccountOperationCompleted, userState);
        }
        
        private void OnCreateAccountOperationCompleted(object arg) {
            if ((this.CreateAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateAccountCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://GlobalBankServices/2006/06/ProcessTransfers", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute(Namespace="http://GlobalBankServices.ServiceContracts/2006/11/IAccountService", IsNullable=true)]
        public ProcessTransfersResponseType ProcessTransfers([System.Xml.Serialization.XmlElementAttribute(Namespace="http://GlobalBankServices.ServiceContracts/2006/11/IAccountService", IsNullable=true)] ProcessTransfersRequestType processTransfersRequest) {
            object[] results = this.Invoke("ProcessTransfers", new object[] {
                        processTransfersRequest});
            return ((ProcessTransfersResponseType)(results[0]));
        }
        
        /// <remarks/>
        public void ProcessTransfersAsync(ProcessTransfersRequestType processTransfersRequest) {
            this.ProcessTransfersAsync(processTransfersRequest, null);
        }
        
        /// <remarks/>
        public void ProcessTransfersAsync(ProcessTransfersRequestType processTransfersRequest, object userState) {
            if ((this.ProcessTransfersOperationCompleted == null)) {
                this.ProcessTransfersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProcessTransfersOperationCompleted);
            }
            this.InvokeAsync("ProcessTransfers", new object[] {
                        processTransfersRequest}, this.ProcessTransfersOperationCompleted, userState);
        }
        
        private void OnProcessTransfersOperationCompleted(object arg) {
            if ((this.ProcessTransfersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProcessTransfersCompleted(this, new ProcessTransfersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30128.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://GlobalBankServices.ServiceContracts/2006/11/IAccountService")]
    public partial class GetAccountRequestType {
        
        private string userNameField;
        
        /// <remarks/>
        public string userName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30128.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://GlobalBankServices.ServiceContracts/2006/11/IAccountService")]
    public partial class ProcessTransfersResponseType {
        
        private TransferTableEntry[] processedAccountsField;
        
        /// <remarks/>
        public TransferTableEntry[] processedAccounts {
            get {
                return this.processedAccountsField;
            }
            set {
                this.processedAccountsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30128.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://GlobalBankServices.ServiceContracts/2006/11/IAccountService")]
    public partial class TransferTableEntry {
        
        private string idField;
        
        private string sourceAccountField;
        
        private string sourceAccountNameField;
        
        private string destinationAccountField;
        
        private string destinationAccountNameField;
        
        private float amountField;
        
        private string descriptionField;
        
        private string statusField;
        
        private string transactionidField;
        
        /// <remarks/>
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string sourceAccount {
            get {
                return this.sourceAccountField;
            }
            set {
                this.sourceAccountField = value;
            }
        }
        
        /// <remarks/>
        public string sourceAccountName {
            get {
                return this.sourceAccountNameField;
            }
            set {
                this.sourceAccountNameField = value;
            }
        }
        
        /// <remarks/>
        public string destinationAccount {
            get {
                return this.destinationAccountField;
            }
            set {
                this.destinationAccountField = value;
            }
        }
        
        /// <remarks/>
        public string destinationAccountName {
            get {
                return this.destinationAccountNameField;
            }
            set {
                this.destinationAccountNameField = value;
            }
        }
        
        /// <remarks/>
        public float amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string transactionid {
            get {
                return this.transactionidField;
            }
            set {
                this.transactionidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30128.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://GlobalBankServices.ServiceContracts/2006/11/IAccountService")]
    public partial class ProcessTransfersRequestType {
        
        private TransferTableEntry[] accountsToProcessField;
        
        /// <remarks/>
        public TransferTableEntry[] accountsToProcess {
            get {
                return this.accountsToProcessField;
            }
            set {
                this.accountsToProcessField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30128.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://GlobalBankServices.ServiceContracts/2006/11/IAccountService")]
    public partial class CreateAccountRequestType {
        
        private AccountTableEntityType accountField;
        
        /// <remarks/>
        public AccountTableEntityType account {
            get {
                return this.accountField;
            }
            set {
                this.accountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30128.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://GlobalBankServices.ServiceContracts/2006/11/IAccountService")]
    public partial class AccountTableEntityType {
        
        private string idField;
        
        private string nameField;
        
        private string numberField;
        
        private string ownerIdField;
        
        /// <remarks/>
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string number {
            get {
                return this.numberField;
            }
            set {
                this.numberField = value;
            }
        }
        
        /// <remarks/>
        public string ownerId {
            get {
                return this.ownerIdField;
            }
            set {
                this.ownerIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30128.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://GlobalBankServices.ServiceContracts/2006/11/IAccountService")]
    public partial class GetAccountResponseType {
        
        private AccountTableEntityType[] userAccountsField;
        
        /// <remarks/>
        public AccountTableEntityType[] userAccounts {
            get {
                return this.userAccountsField;
            }
            set {
                this.userAccountsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    public delegate void GetAccountsCompletedEventHandler(object sender, GetAccountsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetAccountResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetAccountResponseType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    public delegate void CreateAccountCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    public delegate void ProcessTransfersCompletedEventHandler(object sender, ProcessTransfersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30128.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProcessTransfersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProcessTransfersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProcessTransfersResponseType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProcessTransfersResponseType)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591